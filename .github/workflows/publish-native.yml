name: Publish (Native)

on:
  workflow_dispatch: 
    inputs:
      version:
        type: string
        required: true
        description: 'Version number (package)'
        
      prerelease:
        type: boolean
        description: 'Prerelease?'
        
      nuget:
        type: boolean
        description: 'Publish to NuGet?'

permissions:
  packages: write
  contents: write

jobs:
  native-build:
    runs-on: macos-latest
    
    env: 
      XCODE_BUILD_DIR: /tmp/appservice-build
    
    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Prepare Build Dir
        run: mkdir -p ${{ env.XCODE_BUILD_DIR }}

      - name: Perform Xcode Build
        run: |
          xcodebuild \
          -project appservice.xcodeproj \
          -scheme appservice \
          -sdk macosx \
          BUILD_DIR=${{ env.XCODE_BUILD_DIR }} \
          CONFIGURATION_BUILD_DIR=${{ env.XCODE_BUILD_DIR }} \
          ONLY_ACTIVE_ARCH=NO \
          build
          
      - name: Transfer Build Artifacts
        run: |
          mkdir -p ${{ env.DOTNET_NATIVE_DIR }}
          rm -rf ${{ env.DOTNET_NATIVE_DIR }}*
          cp ${{ env.XCODE_BUILD_DIR }}/*.dylib ${{ env.DOTNET_NATIVE_DIR }}
        env:
          DOTNET_NATIVE_DIR: ./AppServiceSharp.Native/runtimes/osx/native/

      - name: Pack
        run: dotnet pack -c Release -o ./packages -p:PackageVersion=${{ github.event.inputs.version }} AppServiceSharp.Native/AppServiceSharp.Native.csproj

      - name: Publish Package (NuGet)
        if: github.event.inputs.nuget == 'true'
        run: dotnet nuget push -s https://api.nuget.org/v3/index.json --skip-duplicate -k ${{ secrets.NUGET_KEY }} ./packages/*.nupkg

      - name: Publish Package (GitHub)
        if: github.event.inputs.nuget != 'true'
        run: dotnet nuget push -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate -k ${{ github.token }} ./packages/*.nupkg
